# Generated by Django 4.1.3 on 2022-11-09 14:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Failure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("description", models.TextField(verbose_name="Description")),
                ("started_at", models.DateTimeField(verbose_name="Started at")),
                ("ended_at", models.DateTimeField(null=True, verbose_name="Ended at")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "manual_annotation",
                    models.BooleanField(
                        default=False, verbose_name="Manual Annotation"
                    ),
                ),
                ("display", models.BooleanField(default=False, verbose_name="Display")),
                ("industry", models.CharField(max_length=255, verbose_name="Industry")),
                (
                    "duration",
                    models.CharField(
                        choices=[
                            ("TRANSIENT", "Transient"),
                            ("PERMANENT", "Permanent"),
                            ("INTERMITTENT", "Intermittent"),
                        ],
                        max_length=12,
                        verbose_name="Duration",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[("INTERNAL", "Internal"), ("EXTERNAL", "External")],
                        max_length=8,
                        verbose_name="Location",
                    ),
                ),
                (
                    "semantics",
                    models.CharField(
                        choices=[
                            ("CRASH", "Crash"),
                            ("OMISSION", "Omission"),
                            ("TIMING", "Timing"),
                            ("VALUE", "Value"),
                            ("ARBITRARY", "Arbitrary"),
                        ],
                        max_length=9,
                        verbose_name="Semantics",
                    ),
                ),
                (
                    "behavior",
                    models.CharField(
                        choices=[("SOFT", "Soft"), ("HARD", "Hard")],
                        max_length=4,
                        verbose_name="Behavior",
                    ),
                ),
                (
                    "dimension",
                    models.CharField(
                        choices=[("SOFTWARE", "Software"), ("HARDWARE", "Hardware")],
                        max_length=8,
                        verbose_name="Dimension",
                    ),
                ),
            ],
            options={
                "verbose_name": "Failure",
                "verbose_name_plural": "Failures",
            },
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=255, verbose_name="Keyword")),
                (
                    "start_year",
                    models.IntegerField(null=True, verbose_name="Start Year"),
                ),
                ("end_year", models.IntegerField(null=True, verbose_name="End Year")),
                (
                    "searched_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Searched at"),
                ),
            ],
            options={
                "verbose_name": "Search Query",
                "verbose_name_plural": "Search Queries",
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("url", models.URLField(unique=True, verbose_name="URL")),
                ("published", models.DateTimeField(verbose_name="Published")),
                ("source", models.URLField(verbose_name="Source")),
                ("summary", models.TextField(blank=True, verbose_name="Summary")),
                ("body", models.TextField(blank=True, verbose_name="Body")),
                (
                    "embedding",
                    models.FileField(
                        null=True, upload_to="embeddings", verbose_name="Embedding"
                    ),
                ),
                (
                    "scraped_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Scraped at"),
                ),
                (
                    "failure",
                    models.ManyToManyField(
                        related_name="articles",
                        related_query_name="article",
                        to="articles.failure",
                        verbose_name="Failure",
                    ),
                ),
                (
                    "search_query",
                    models.ManyToManyField(
                        related_name="articles",
                        related_query_name="article",
                        to="articles.searchquery",
                        verbose_name="Search Query",
                    ),
                ),
            ],
            options={
                "verbose_name": "Article",
                "verbose_name_plural": "Articles",
            },
        ),
    ]
